plugins {
    id "java"
    id "idea"
    id "org.springframework.boot" version "${springBootVersion}"
    id "org.owasp.dependencycheck" version "9.0.10"
    id "org.domaframework.doma.compile" version "2.0.0"
    id "com.google.cloud.tools.jib" version "3.4.3"
    id "com.avast.gradle.docker-compose" version "0.17.7"
    id "org.eclipse.jkube.kubernetes" version "${jkubeVersion}"
    id "com.diffplug.spotless" version "6.23.3"
    id "com.github.ben-manes.versions" version "0.50.0"
    id "jacoco"
}

apply plugin: "io.spring.dependency-management"

repositories {
    mavenCentral()
    mavenLocal()
    maven { url "https://repo.spring.io/release" }
}

spotless {
    java {
        googleJavaFormat()
        trimTrailingWhitespace()
        endWithNewline()
    }

    groovyGradle {
        target "*.gradle", "**/*.gradle"
        trimTrailingWhitespace()
        indentWithSpaces(4)
        endWithNewline()
    }

    format "misc", {
        target "**/*.md", "**/*.yml"
        trimTrailingWhitespace()
        indentWithSpaces(2)
        endWithNewline()
    }

    lineEndings "UNIX"
}

sourceCompatibility = "17"
[compileJava, compileTestJava]*.options*.encoding = "UTF-8"
[compileJava, compileTestJava]*.options*.compilerArgs = ["-parameters", "-Xlint:all"]

project.ext["logback.version"] = "1.4.14"
project.ext["netty-handler"] = "4.1.101.Final" // CVE-2023-4586 https://github.com/aws/aws-sdk-java-v2/issues/4584
project.ext["jackson-bom.version"] = "2.16.0"
project.ext["mysql.version"] = "8.2.0"

dependencies {
    compileOnly "org.projectlombok:lombok"
    annotationProcessor "org.projectlombok:lombok"
    testCompileOnly "org.projectlombok:lombok"
    testAnnotationProcessor "org.projectlombok:lombok"

    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "org.springframework.boot:spring-boot-starter-thymeleaf"
    implementation "org.springframework.boot:spring-boot-starter-mail"
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-json"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-data-redis"
    implementation "org.springframework.boot:spring-boot-starter-oauth2-resource-server"

    developmentOnly "org.springframework.boot:spring-boot-devtools"
    // developmentOnly "org.springframework.boot:spring-boot-docker-compose"

    implementation "org.springframework.data:spring-data-commons"
    implementation "org.seasar.doma.boot:doma-spring-boot-starter:1.7.0"
    implementation "org.seasar.doma:doma-core:${domaVersion}"
    implementation "org.seasar.doma:doma-slf4j:${domaVersion}"
    annotationProcessor "org.seasar.doma:doma-processor:${domaVersion}"

    implementation "com.fasterxml.jackson.module:jackson-module-parameter-names"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jdk8"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-csv"

    implementation "org.modelmapper:modelmapper:3.2.1"
    implementation "com.auth0:java-jwt:4.4.0"
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0"

    implementation "org.flywaydb:flyway-core"
    implementation "org.flywaydb:flyway-mysql"
    runtimeOnly "com.mysql:mysql-connector-j"
    // runtimeOnly "org.postgresql:postgresql"

    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.springframework.security:spring-security-test"
    testImplementation "com.h2database:h2"

    testImplementation "org.flywaydb.flyway-test-extensions:flyway-spring-test:9.5.0"
    testImplementation "org.springframework.boot:spring-boot-testcontainers"
    testImplementation "org.testcontainers:junit-jupiter"
    testImplementation "org.testcontainers:mysql"

    testImplementation "org.assertj:assertj-core"
    testImplementation "org.mockito:mockito-core"

    runtimeOnly "org.springframework.boot:spring-boot-properties-migrator"
}

tasks.named("test") {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
    systemProperty "spring.profiles.active", "test"
}

compileJava.dependsOn "spotlessApply"
k8sBuild.dependsOn "build"
k8sResource.dependsOn "k8sBuild"
k8sApply.dependsOn "k8sResource"
